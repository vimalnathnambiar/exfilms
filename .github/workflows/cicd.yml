# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: '*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ['lts/*']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: |
          npm ci
          npm test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  npm-publish:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ['lts/*']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: |
          npm ci
          npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-publish:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [npm-publish]
    steps:
      - uses: actions/checkout@v4
      - name: Fetch latest commit
        run: git pull origin main
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/exfilms:${{ env.VERSION }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/exfilms:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/exfilms:latest
      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/exfilms:${{ env.VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/exfilms:latest
